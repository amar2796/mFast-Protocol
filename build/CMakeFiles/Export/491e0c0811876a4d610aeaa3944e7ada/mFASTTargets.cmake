# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.25)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS mfast_static mfast_coder_static tinyxml2_static mfast_xml_parser_static mfast_json_static fast_type_gen)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target mfast_static
add_library(mfast_static STATIC IMPORTED)

set_target_properties(mfast_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MFAST_STATIC_DEFINE"
  INTERFACE_COMPILE_FEATURES "cxx_std_14"
  INTERFACE_LINK_LIBRARIES "Boost::headers"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(mfast_static
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/mfast.h" "${_IMPORT_PREFIX}/include/mfast/aggregate_ref.h" "${_IMPORT_PREFIX}/include/mfast/allocator.h" "${_IMPORT_PREFIX}/include/mfast/arena_allocator.h" "${_IMPORT_PREFIX}/include/mfast/array_view.h" "${_IMPORT_PREFIX}/include/mfast/boolean_ref.h" "${_IMPORT_PREFIX}/include/mfast/composite_type.h" "${_IMPORT_PREFIX}/include/mfast/decimal_ref.h" "${_IMPORT_PREFIX}/include/mfast/enum_ref.h" "${_IMPORT_PREFIX}/include/mfast/exceptions.h" "${_IMPORT_PREFIX}/include/mfast/ext_ref.h" "${_IMPORT_PREFIX}/include/mfast/field_comparator.h" "${_IMPORT_PREFIX}/include/mfast/field_instructions.h" "${_IMPORT_PREFIX}/include/mfast/field_mref.h" "${_IMPORT_PREFIX}/include/mfast/field_ref.h" "${_IMPORT_PREFIX}/include/mfast/field_visitor.h" "${_IMPORT_PREFIX}/include/mfast/group_ref.h" "${_IMPORT_PREFIX}/include/mfast/int_ref.h" "${_IMPORT_PREFIX}/include/mfast/malloc_allocator.h" "${_IMPORT_PREFIX}/include/mfast/message_ref.h" "${_IMPORT_PREFIX}/include/mfast/mfast_export.h" "${_IMPORT_PREFIX}/include/mfast/nested_message_ref.h" "${_IMPORT_PREFIX}/include/mfast/output.h" "${_IMPORT_PREFIX}/include/mfast/sequence_ref.h" "${_IMPORT_PREFIX}/include/mfast/sequence_type.h" "${_IMPORT_PREFIX}/include/mfast/string_ref.h" "${_IMPORT_PREFIX}/include/mfast/type_category.h" "${_IMPORT_PREFIX}/include/mfast/value_storage.h" "${_IMPORT_PREFIX}/include/mfast/vector_ref.h" "${_IMPORT_PREFIX}/include/mfast/view_iterator.h" "${_IMPORT_PREFIX}/include/mfast/instructions/byte_vector_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/decimal_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/enum_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/field_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/group_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/int_instructions.h" "${_IMPORT_PREFIX}/include/mfast/instructions/int_vector_instructions.h" "${_IMPORT_PREFIX}/include/mfast/instructions/sequence_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/string_instructions.h" "${_IMPORT_PREFIX}/include/mfast/instructions/template_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/templateref_instruction.h" "${_IMPORT_PREFIX}/include/mfast/instructions/templates_description.h" "${_IMPORT_PREFIX}/include/mfast/instructions/vector_instruction_base.h"
  )
else()
  set_property(TARGET mfast_static
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target mfast_coder_static
add_library(mfast_coder_static STATIC IMPORTED)

set_target_properties(mfast_coder_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MFAST_CODER_STATIC_DEFINE"
  INTERFACE_LINK_LIBRARIES "mfast_static"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(mfast_coder_static
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/mfast/coder/fast_decoder.h" "${_IMPORT_PREFIX}/include/mfast/coder/fast_decoder_v2.h" "${_IMPORT_PREFIX}/include/mfast/coder/fast_encoder.h" "${_IMPORT_PREFIX}/include/mfast/coder/fast_encoder_v2.h" "${_IMPORT_PREFIX}/include/mfast/coder/mfast_coder_export.h" "${_IMPORT_PREFIX}/include/mfast/coder/common/codec_helper.h" "${_IMPORT_PREFIX}/include/mfast/coder/common/debug_stream.h" "${_IMPORT_PREFIX}/include/mfast/coder/common/dictionary_builder.h" "${_IMPORT_PREFIX}/include/mfast/coder/common/exceptions.h" "${_IMPORT_PREFIX}/include/mfast/coder/common/template_repo.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/check_overflow.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/decoder_field_operator.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/decoder_presence_map.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/fast_istream.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/fast_istream_extractor.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder/fast_istreambuf.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder_v2/fast_decoder_core.h" "${_IMPORT_PREFIX}/include/mfast/coder/decoder_v2/fast_istream_extractor.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/encoder_field_operator.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/encoder_presence_map.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/fast_ostream.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/fast_ostream_inserter.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/fast_ostreambuf.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder/resizable_fast_ostreambuf.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder_v2/fast_encoder_core.h" "${_IMPORT_PREFIX}/include/mfast/coder/encoder_v2/fast_ostream_inserter.h"
  )
else()
  set_property(TARGET mfast_coder_static
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target tinyxml2_static
add_library(tinyxml2_static INTERFACE IMPORTED)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(tinyxml2_static
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include/mfast/xml_parser"
      FILES "${_IMPORT_PREFIX}/include/mfast/xml_parser/tinyxml2.h"
  )
else()
  set_property(TARGET tinyxml2_static
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include/mfast/xml_parser"
  )
endif()

# Create imported target mfast_xml_parser_static
add_library(mfast_xml_parser_static STATIC IMPORTED)

set_target_properties(mfast_xml_parser_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MFAST_CODER_STATIC_DEFINE"
  INTERFACE_LINK_LIBRARIES "mfast_static;tinyxml2_static"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(mfast_xml_parser_static
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/mfast/xml_parser/FastXMLVisitor.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/dynamic_templates_description.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/fast_xml_attributes.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/field_builder.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/field_builder_base.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/field_op.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/mfast_xml_parser_export.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/template_registry_impl.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/templates_builder.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/view_info_builder.h" "${_IMPORT_PREFIX}/include/mfast/xml_parser/xml_util.h"
  )
else()
  set_property(TARGET mfast_xml_parser_static
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target mfast_json_static
add_library(mfast_json_static STATIC IMPORTED)

set_target_properties(mfast_json_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MFAST_JSON_STATIC_DEFINE"
  INTERFACE_LINK_LIBRARIES "mfast_static"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(mfast_json_static
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/mfast/json/json.h" "${_IMPORT_PREFIX}/include/mfast/json/mfast_json_export.h"
  )
else()
  set_property(TARGET mfast_json_static
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target fast_type_gen
add_executable(fast_type_gen IMPORTED)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/mFASTTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
