// simple10.cpp generated by mFAST from FAST Template. 
// Do not modify this file directly. Any modifications 
// will be lost the next time this file is generated.

#include "simple10.h"

using namespace mfast;

namespace simple10
{
const Test::instruction_type*
Test::instruction()
{
  const static Test::instruction_type* ptr_instruction;
  if (ptr_instruction) return ptr_instruction;
static uint32_field_instruction
Test__sequence1_element__sequence1_length_instruction(
  operator_constant,
  presence_mandatory,
  110, // id
  "", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(1U)); // initial_value

const static int64_field_instruction
Test__sequence1_element__field1_instruction(
  operator_copy,
  presence_mandatory,
  111, // id
  "field1", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<int64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Test__sequence1_element__subinstructions[] = {
  &Test__sequence1_element__field1_instruction,
};

const static Test_cref::sequence1_cref::instruction_type
Test__sequence1_instruction(
  presence_mandatory,
  0, // id
  "sequence1", // name
  "", // ns
  "", // dictionary
  Test__sequence1_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &Test__sequence1_element__sequence1_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static field_instruction* Test__subinstructions[] = {
  &Test__sequence1_instruction,
};

  const static Test::instruction_type the_instruction(
    1, // id
    "Test", // name
    "", // ns
    "", // templateNs
    "", // dictionary
    Test__subinstructions,
    0, // reset
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag 

  ptr_instruction = &the_instruction;
  return ptr_instruction;
}

const template_instruction* simple10_templates_instructions[] ={
  Test::instruction()};

templates_description::templates_description()
  : mfast::templates_description(
    "http://www.fixprotocol.org/ns/fix", // ns
    "http://www.fixprotocol.org/ns/templates/sample", // templateNs
    "", // dictionary
    simple10_templates_instructions)
{
}

const templates_description* templates_description::instance()
{
  static const templates_description inst;
  return &inst;
}

}
