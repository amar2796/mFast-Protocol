// test4.cpp generated by mFAST from FAST Template. 
// Do not modify this file directly. Any modifications 
// will be lost the next time this file is generated.

#include "test4.h"

using namespace mfast;

namespace test4
{
const Address::instruction_type*
Address::instruction()
{
const static ascii_field_instruction
Address__streetAddress_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "streetAddress", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Address__city_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "city", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Address__state_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "state", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
Address__postalCode_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "postalCode", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Address__subinstructions[] = {
  &Address__streetAddress_instruction,
  &Address__city_instruction,
  &Address__state_instruction,
  &Address__postalCode_instruction,
};

const static Address::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Address", // name
  "", // ns
  "", // dictionary
  Address__subinstructions,
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag

  return &the_instruction;
}

const Addresses::instruction_type*
Addresses::instruction()
{
static uint32_field_instruction
Addresses_element__Addresses_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static Addresses::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Addresses", // name
  "", // ns
  "", // dictionary
  instructions_view_t(nullptr,0),
  Address::instruction(), // element_instruction
  nullptr, // ref_instruction
  &Addresses_element__Addresses_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const PhoneNumbers::instruction_type*
PhoneNumbers::instruction()
{
static uint32_field_instruction
PhoneNumbers_element__PhoneNumbers_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
PhoneNumbers_element__type_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "type", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
PhoneNumbers_element__number_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "number", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* PhoneNumbers_element__subinstructions[] = {
  &PhoneNumbers_element__type_instruction,
  &PhoneNumbers_element__number_instruction,
};

const static PhoneNumbers::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "PhoneNumbers", // name
  "", // ns
  "", // dictionary
  PhoneNumbers_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &PhoneNumbers_element__PhoneNumbers_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const Emails::instruction_type*
Emails::instruction()
{
static uint32_field_instruction
Emails_element__Emails_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
Emails_element____instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Emails_element__subinstructions[] = {
  &Emails_element____instruction,
};

const static Emails::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Emails", // name
  "", // ns
  "", // dictionary
  Emails_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &Emails_element__Emails_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const Config::instruction_type*
Config::instruction()
{
static uint32_field_instruction
Config_element__Config_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
Config_element__name_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "name", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Config_element__detail__detail1_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "detail1", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Config_element__detail__detail2_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "detail2", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Config_element__detail__subinstructions[] = {
  &Config_element__detail__detail1_instruction,
  &Config_element__detail__detail2_instruction,
};

const static Config_element_cref::detail_cref::instruction_type
Config_element__detail_instruction(
  presence_mandatory,
  0, // id
  "detail", // name
  "", // ns
  "", // dictionary
  Config_element__detail__subinstructions,
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag

const static field_instruction* Config_element__subinstructions[] = {
  &Config_element__name_instruction,
  &Config_element__detail_instruction,
};

const static Config::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Config", // name
  "", // ns
  "", // dictionary
  Config_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &Config_element__Config_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const Gender::instruction_type*
Gender::instruction()
{
static const char* elements[] = {
  "male",
  "female"};
const static Gender::instruction_type
  the_instruction(
  operator_copy,
  presence_mandatory,
  0, // id
  "Gender", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(0), // initial_value
  elements, // element names
  nullptr, // element values
  2,// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const DiscreteEnum::instruction_type*
DiscreteEnum::instruction()
{
static const char* elements[] = {
  "One",
  "Three",
  "Five"};
static const uint64_t values[] = {
  1,
  3,
  5};
const static DiscreteEnum::instruction_type
  the_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "DiscreteEnum", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(0), // initial_value
  elements, // element names
  values, // element values
  3,// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

  return &the_instruction;
}

const Education::instruction_type*
Education::instruction()
{
const static ascii_field_instruction
Education__college_instruction(
  operator_none,
  presence_optional,
  0, // id
  "college", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Education__high_school_instruction(
  operator_none,
  presence_optional,
  0, // id
  "high-school", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
Education__elementary_school_instruction(
  operator_none,
  presence_optional,
  0, // id
  "elementary-school", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Education__subinstructions[] = {
  &Education__college_instruction,
  &Education__high_school_instruction,
  &Education__elementary_school_instruction,
};

const static Education::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Education", // name
  "", // ns
  "", // dictionary
  Education__subinstructions,
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag

  return &the_instruction;
}

const Person::instruction_type*
Person::instruction()
{
const static unicode_field_instruction
Person__firstName_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "firstName", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial value
  0, // length id
  "", // length name
  ""); // length ns

const static unicode_field_instruction
Person__lastName_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "lastName", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial value
  0, // length id
  "", // length name
  ""); // length ns

const static Gender::instruction_type
Person__gender_instruction(
  operator_default,
  presence_mandatory,
  0, // id
  "gender", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(1), // initial_value
  Gender::instruction()->elements(), // element names
  Gender::instruction()->element_values(), // element values
  Gender::instruction()->num_elements(),// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static uint32_field_instruction
Person__age_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "age", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

static uint32_field_instruction
Person__addresses_element__addresses_length_instruction(
  operator_none,
  presence_optional,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static Person_cref::addresses_cref::instruction_type
Person__addresses_instruction(
  presence_optional,
  0, // id
  "addresses", // name
  "", // ns
  "", // dictionary
  instructions_view_t(nullptr,0),
  Address::instruction(), // element_instruction
  Addresses::instruction(), // ref_instruction
   &Person__addresses_element__addresses_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

static uint32_field_instruction
Person__phoneNumbers_element__phoneNumbers_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static Person_cref::phoneNumbers_cref::instruction_type
Person__phoneNumbers_instruction(
  presence_mandatory,
  0, // id
  "phoneNumbers", // name
  "", // ns
  "", // dictionary
  instructions_view_t(nullptr,0),
  nullptr, // element_instruction
  PhoneNumbers::instruction(), // ref_instruction
   &Person__phoneNumbers_element__phoneNumbers_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

static uint32_field_instruction
Person__emails_element__emails_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static Person_cref::emails_cref::instruction_type
Person__emails_instruction(
  presence_mandatory,
  0, // id
  "emails", // name
  "", // ns
  "", // dictionary
  instructions_view_t(nullptr,0),
  nullptr, // element_instruction
  Emails::instruction(), // ref_instruction
   &Person__emails_element__emails_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

static const char* elements[] = {
  "A",
  "B",
  "AB",
  "O"};
const static Person_cref::bloodType_cref::instruction_type
Person__bloodType_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "bloodType", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(0), // initial_value
  elements, // element names
  nullptr, // element values
  4,// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static mfast::boolean::instruction_type
Person__married_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "married", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(0), // initial_value
  mfast::boolean::instruction()->elements(), // element names
  mfast::boolean::instruction()->element_values(), // element values
  mfast::boolean::instruction()->num_elements(),// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static DiscreteEnum::instruction_type
Person__discrete_instruction(
  operator_copy,
  presence_mandatory,
  0, // id
  "discrete", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(0), // initial_value
  DiscreteEnum::instruction()->elements(), // element names
  DiscreteEnum::instruction()->element_values(), // element values
  DiscreteEnum::instruction()->num_elements(),// num elements
  nullptr, // ref_instruction
  nullptr, // cpp_ns
  mfast::instruction_tag(0)); //tag 

static mantissa_field_instruction
Person__salary_mantissa_instruction(
  operator_none,
  nullptr,  // mantissa opContext
  int_value_storage<int64_t>(0LL));// mantissa inital value

const static decimal_field_instruction
Person__salary_instruction(
  operator_constant,
  presence_mandatory,
  0, // id
  "salary", // name
  "", // ns
  nullptr,  // opContext
  &Person__salary_mantissa_instruction,
  decimal_value_storage(0LL, -2), // initial_value
  mfast::instruction_tag(0)); // tag

const static byte_vector_field_instruction
Person__id_instruction(
  operator_default,
  presence_mandatory,
  0, // id
  "id", // name
  "", // ns
  nullptr,  // opContext
  byte_vector_value_storage("\x0\x1\x2\x3\x4\x5\x6\x7\x8\x9\xa\xb\xc\xd\xe\xf",16), // initial value
  0, // length id
  "", // length name
  "", // length ns
  mfast::instruction_tag(0)); // tag

const static mfast::group_instruction_ex<Person_cref::education_cref>
Person__education_instruction(
  presence_optional,
  0, // id
  "education", // name
  "", // ns
  "", // dictionary
  Education::instruction(),
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag

const static int32_vector_field_instruction
Person__test_vector_instruction(
  presence_mandatory,
  0, // id
  "test_vector", // name
  "", // ns
  mfast::instruction_tag(0)); // tag

static uint32_field_instruction
Person__twoDimSequence_element__twoDimSequence_length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

static uint32_field_instruction
Person__twoDimSequence_element____element____length_instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "__length__", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
Person__twoDimSequence_element____element____instruction(
  operator_none,
  presence_mandatory,
  0, // id
  "", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Person__twoDimSequence_element____element__subinstructions[] = {
  &Person__twoDimSequence_element____element____instruction,
};

const static Person_cref::twoDimSequence_element_cref::instruction_type
Person__twoDimSequence_element____instruction(
  presence_mandatory,
  0, // id
  "", // name
  "", // ns
  "", // dictionary
  Person__twoDimSequence_element____element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &Person__twoDimSequence_element____element____length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static field_instruction* Person__twoDimSequence_element__subinstructions[] = {
  &Person__twoDimSequence_element____instruction,
};

const static Person_cref::twoDimSequence_cref::instruction_type
Person__twoDimSequence_instruction(
  presence_mandatory,
  0, // id
  "twoDimSequence", // name
  "", // ns
  "", // dictionary
  Person__twoDimSequence_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &Person__twoDimSequence_element__twoDimSequence_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static field_instruction* Person__subinstructions[] = {
  &Person__firstName_instruction,
  &Person__lastName_instruction,
  &Person__gender_instruction,
  &Person__age_instruction,
  &Person__addresses_instruction,
  &Person__phoneNumbers_instruction,
  &Person__emails_instruction,
  &Person__bloodType_instruction,
  &Person__married_instruction,
  &Person__discrete_instruction,
  &Person__salary_instruction,
  &Person__id_instruction,
  &Person__education_instruction,
  &Person__test_vector_instruction,
  &Person__twoDimSequence_instruction,
};

const static Person::instruction_type
  the_instruction(
  presence_mandatory,
  0, // id
  "Person", // name
  "", // ns
  "", // dictionary
  Person__subinstructions,
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag

  return &the_instruction;
}


}
