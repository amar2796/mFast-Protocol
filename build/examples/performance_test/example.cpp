// example.cpp generated by mFAST from FAST Template. 
// Do not modify this file directly. Any modifications 
// will be lost the next time this file is generated.

#include "example.h"

using namespace mfast;

namespace example
{
const Done::instruction_type*
Done::instruction()
{
  const static Done::instruction_type* ptr_instruction;
  if (ptr_instruction) return ptr_instruction;
const static ascii_field_instruction
Done__MessageType_instruction(
  operator_constant,
  presence_mandatory,
  35, // id
  "MessageType", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("99",2), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* Done__subinstructions[] = {
  &Done__MessageType_instruction,
};

  const static Done::instruction_type the_instruction(
    99, // id
    "Done", // name
    "", // ns
    "", // templateNs
    "", // dictionary
    Done__subinstructions,
    0, // reset
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag 

  ptr_instruction = &the_instruction;
  return ptr_instruction;
}

const MarketData::instruction_type*
MarketData::instruction()
{
  const static MarketData::instruction_type* ptr_instruction;
  if (ptr_instruction) return ptr_instruction;
const static ascii_field_instruction
MarketData__ApplVerID_instruction(
  operator_constant,
  presence_mandatory,
  1128, // id
  "ApplVerID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("1.0",3), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MessageType_instruction(
  operator_constant,
  presence_mandatory,
  35, // id
  "MessageType", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("X",1), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__SenderCompID_instruction(
  operator_constant,
  presence_mandatory,
  49, // id
  "SenderCompID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("Test Exchange",13), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MsgSeqNum_instruction(
  operator_none,
  presence_mandatory,
  34, // id
  "MsgSeqNum", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__SendingTime_instruction(
  operator_none,
  presence_mandatory,
  52, // id
  "SendingTime", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__TradeDate_instruction(
  operator_none,
  presence_mandatory,
  75, // id
  "TradeDate", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

static uint32_field_instruction
MarketData__MDEntries_element__MDEntries_length_instruction(
  operator_none,
  presence_mandatory,
  268, // id
  "NoMDEntries", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static uint32_field_instruction
MarketData__MDEntries_element__MDUpdateAction_instruction(
  operator_copy,
  presence_mandatory,
  279, // id
  "MDUpdateAction", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(1U), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__MDPriceLevel_instruction(
  operator_default,
  presence_optional,
  1023, // id
  "MDPriceLevel", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(1U), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__MDEntryType_instruction(
  operator_copy,
  presence_mandatory,
  269, // id
  "MDEntryType", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("0",1), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__OpenCloseSettleFlag_instruction(
  operator_none,
  presence_optional,
  286, // id
  "OpenCloseSettleFlag", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__SecurityIDSource_instruction(
  operator_constant,
  presence_mandatory,
  22, // id
  "SecurityIDSource", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(9U), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__SecurityID_instruction(
  operator_copy,
  presence_mandatory,
  48, // id
  "SecurityID", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__RptSeq_instruction(
  operator_increment,
  presence_mandatory,
  83, // id
  "RptSeq", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

static mantissa_field_instruction
MarketData__MDEntries_element__MDEntryPx_mantissa_instruction(
  operator_delta,
  nullptr,  // mantissa opContext
  int_value_storage<int64_t>(0LL));// mantissa inital value

const static decimal_field_instruction
MarketData__MDEntries_element__MDEntryPx_instruction(
  operator_default,
  presence_mandatory,
  270, // id
  "MDEntryPx", // name
  "", // ns
  nullptr,  // opContext
  &MarketData__MDEntries_element__MDEntryPx_mantissa_instruction,
  decimal_value_storage(0LL, 0), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__MDEntryTime_instruction(
  operator_copy,
  presence_mandatory,
  273, // id
  "MDEntryTime", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static int32_field_instruction
MarketData__MDEntries_element__MDEntrySize_instruction(
  operator_delta,
  presence_optional,
  271, // id
  "MDEntrySize", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<int32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__NumberOfOrders_instruction(
  operator_delta,
  presence_optional,
  346, // id
  "NumberOfOrders", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__TradingSessionID_instruction(
  operator_default,
  presence_optional,
  336, // id
  "TradingSessionID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("2",1), // initial_value
  mfast::instruction_tag(0)); // tag

static mantissa_field_instruction
MarketData__MDEntries_element__NetChgPrevDay_mantissa_instruction(
  operator_delta,
  nullptr,  // mantissa opContext
  int_value_storage<int64_t>(0LL));// mantissa inital value

const static decimal_field_instruction
MarketData__MDEntries_element__NetChgPrevDay_instruction(
  operator_default,
  presence_optional,
  451, // id
  "NetChgPrevDay", // name
  "", // ns
  nullptr,  // opContext
  &MarketData__MDEntries_element__NetChgPrevDay_mantissa_instruction,
  decimal_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__TradeVolume_instruction(
  operator_default,
  presence_optional,
  1020, // id
  "TradeVolume", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__TradeCondition_instruction(
  operator_default,
  presence_optional,
  277, // id
  "TradeCondition", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__TickDirection_instruction(
  operator_default,
  presence_optional,
  274, // id
  "TickDirection", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__QuoteCondition_instruction(
  operator_default,
  presence_optional,
  276, // id
  "QuoteCondition", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MarketData__MDEntries_element__AggressorSide_instruction(
  operator_default,
  presence_optional,
  5797, // id
  "AggressorSide", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MarketData__MDEntries_element__MatchEventIndicator_instruction(
  operator_default,
  presence_optional,
  5799, // id
  "MatchEventIndicator", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("1",1), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* MarketData__MDEntries_element__subinstructions[] = {
  &MarketData__MDEntries_element__MDUpdateAction_instruction,
  &MarketData__MDEntries_element__MDPriceLevel_instruction,
  &MarketData__MDEntries_element__MDEntryType_instruction,
  &MarketData__MDEntries_element__OpenCloseSettleFlag_instruction,
  &MarketData__MDEntries_element__SecurityIDSource_instruction,
  &MarketData__MDEntries_element__SecurityID_instruction,
  &MarketData__MDEntries_element__RptSeq_instruction,
  &MarketData__MDEntries_element__MDEntryPx_instruction,
  &MarketData__MDEntries_element__MDEntryTime_instruction,
  &MarketData__MDEntries_element__MDEntrySize_instruction,
  &MarketData__MDEntries_element__NumberOfOrders_instruction,
  &MarketData__MDEntries_element__TradingSessionID_instruction,
  &MarketData__MDEntries_element__NetChgPrevDay_instruction,
  &MarketData__MDEntries_element__TradeVolume_instruction,
  &MarketData__MDEntries_element__TradeCondition_instruction,
  &MarketData__MDEntries_element__TickDirection_instruction,
  &MarketData__MDEntries_element__QuoteCondition_instruction,
  &MarketData__MDEntries_element__AggressorSide_instruction,
  &MarketData__MDEntries_element__MatchEventIndicator_instruction,
};

const static MarketData_cref::MDEntries_cref::instruction_type
MarketData__MDEntries_instruction(
  presence_mandatory,
  0, // id
  "MDEntries", // name
  "", // ns
  "", // dictionary
  MarketData__MDEntries_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &MarketData__MDEntries_element__MDEntries_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static field_instruction* MarketData__subinstructions[] = {
  &MarketData__ApplVerID_instruction,
  &MarketData__MessageType_instruction,
  &MarketData__SenderCompID_instruction,
  &MarketData__MsgSeqNum_instruction,
  &MarketData__SendingTime_instruction,
  &MarketData__TradeDate_instruction,
  &MarketData__MDEntries_instruction,
};

  const static MarketData::instruction_type the_instruction(
    1, // id
    "MarketData", // name
    "", // ns
    "", // templateNs
    "1", // dictionary
    MarketData__subinstructions,
    0, // reset
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag 

  ptr_instruction = &the_instruction;
  return ptr_instruction;
}

const QuoteRequest::instruction_type*
QuoteRequest::instruction()
{
  const static QuoteRequest::instruction_type* ptr_instruction;
  if (ptr_instruction) return ptr_instruction;
const static ascii_field_instruction
QuoteRequest__ApplVerID_instruction(
  operator_constant,
  presence_mandatory,
  1128, // id
  "ApplVerID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("1.0",3), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
QuoteRequest__MessageType_instruction(
  operator_constant,
  presence_mandatory,
  35, // id
  "MessageType", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("R",1), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
QuoteRequest__SenderCompID_instruction(
  operator_constant,
  presence_mandatory,
  49, // id
  "SenderCompID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("Test Exchange",13), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__MsgSeqNum_instruction(
  operator_none,
  presence_mandatory,
  34, // id
  "MsgSeqNum", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__SendingTime_instruction(
  operator_none,
  presence_mandatory,
  52, // id
  "SendingTime", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
QuoteRequest__QuoteReqID_instruction(
  operator_none,
  presence_optional,
  131, // id
  "QuoteReqID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

static uint32_field_instruction
QuoteRequest__RelatedSym_element__RelatedSym_length_instruction(
  operator_none,
  presence_mandatory,
  146, // id
  "NoRelatedSym", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
QuoteRequest__RelatedSym_element__Symbol_instruction(
  operator_constant,
  presence_mandatory,
  55, // id
  "Symbol", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage("[N/A]",5), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
QuoteRequest__RelatedSym_element__OrderQty_instruction(
  operator_none,
  presence_optional,
  38, // id
  "OrderQty", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__RelatedSym_element__Side_instruction(
  operator_default,
  presence_optional,
  54, // id
  "Side", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(1U), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
QuoteRequest__RelatedSym_element__TransactTime_instruction(
  operator_none,
  presence_mandatory,
  60, // id
  "TransactTime", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__RelatedSym_element__QuoteType_instruction(
  operator_default,
  presence_mandatory,
  537, // id
  "QuoteType", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(1U), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__RelatedSym_element__SecurityID_instruction(
  operator_none,
  presence_mandatory,
  48, // id
  "SecurityID", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
QuoteRequest__RelatedSym_element__SecurityIDSource_instruction(
  operator_constant,
  presence_mandatory,
  22, // id
  "SecurityIDSource", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(9U), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* QuoteRequest__RelatedSym_element__subinstructions[] = {
  &QuoteRequest__RelatedSym_element__Symbol_instruction,
  &QuoteRequest__RelatedSym_element__OrderQty_instruction,
  &QuoteRequest__RelatedSym_element__Side_instruction,
  &QuoteRequest__RelatedSym_element__TransactTime_instruction,
  &QuoteRequest__RelatedSym_element__QuoteType_instruction,
  &QuoteRequest__RelatedSym_element__SecurityID_instruction,
  &QuoteRequest__RelatedSym_element__SecurityIDSource_instruction,
};

const static QuoteRequest_cref::RelatedSym_cref::instruction_type
QuoteRequest__RelatedSym_instruction(
  presence_mandatory,
  0, // id
  "RelatedSym", // name
  "", // ns
  "", // dictionary
  QuoteRequest__RelatedSym_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &QuoteRequest__RelatedSym_element__RelatedSym_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static field_instruction* QuoteRequest__subinstructions[] = {
  &QuoteRequest__ApplVerID_instruction,
  &QuoteRequest__MessageType_instruction,
  &QuoteRequest__SenderCompID_instruction,
  &QuoteRequest__MsgSeqNum_instruction,
  &QuoteRequest__SendingTime_instruction,
  &QuoteRequest__QuoteReqID_instruction,
  &QuoteRequest__RelatedSym_instruction,
};

  const static QuoteRequest::instruction_type the_instruction(
    2, // id
    "QuoteRequest", // name
    "", // ns
    "", // templateNs
    "2", // dictionary
    QuoteRequest__subinstructions,
    0, // reset
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag 

  ptr_instruction = &the_instruction;
  return ptr_instruction;
}

const template_instruction* example_templates_instructions[] ={
  Done::instruction(),
  MarketData::instruction(),
  QuoteRequest::instruction()};

templates_description::templates_description()
  : mfast::templates_description(
    "", // ns
    "", // templateNs
    "", // dictionary
    example_templates_instructions)
{
}

const templates_description* templates_description::instance()
{
  static const templates_description inst;
  return &inst;
}

}
